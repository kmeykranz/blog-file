<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Gcd on Fiveth</title>
        <link>http://localhost:1313/tags/gcd/</link>
        <description>Recent content in Gcd on Fiveth</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Fiveth</copyright>
        <lastBuildDate>Wed, 14 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/gcd/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>辗转相除法-求最大公因数</title>
        <link>http://localhost:1313/p/72c/</link>
        <pubDate>Wed, 14 Dec 2022 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/72c/</guid>
        <description>&lt;img src="https://p.fiveth.cc/img/m/gcd.webp" alt="Featured image of post 辗转相除法-求最大公因数" /&gt;&lt;p&gt;辗转相除法是一种求最大公因数的计算方法。&lt;/p&gt;
&lt;p&gt;这种方法在编程中很常用，在数学计算中也可以用来求很复杂的最大公因数问题。&lt;/p&gt;
&lt;h2 id=&#34;如何使用&#34;&gt;如何使用
&lt;/h2&gt;&lt;p&gt;题目：求最大公因数(36,14)&lt;/p&gt;
$$
\displaylines{
反复用除数除以余数直到除尽\\
36{\div}14=2\dots8\\
14{\div}8=1\dots6\\
8{\div}6=1\dots2\\
6{\div}2=3\\
最后一个除数就是最大公约数，也就是2
}
$$&lt;p&gt;
我们算出最大公约数(36,14)=2&lt;/p&gt;
&lt;p&gt;到这里，我们就知道如何使用辗转相除法了。&lt;/p&gt;
&lt;p&gt;但是，鲁迅曾说过“我们学公式必须得懂得原理”，我们明白了原理才能灵活运用&lt;/p&gt;
&lt;h2 id=&#34;原理&#34;&gt;原理
&lt;/h2&gt;&lt;p&gt;求最大公因数(a,b)&lt;/p&gt;
$$
\displaylines{
a{\div}b=q\dots r \\
a=bq+r \\
r=a-bq
}
$$$$
\displaylines{
(a,b)=(b,r) \\a和b的最大公约数就等于b和r的最大公约数
}
$$$$
\displaylines{
(1)设(a,b)=d\\
那么a=dm,b=dn\\
然后我们将其带入r=a-bq\\
得r=d(m-nq)\\
因为m,n,q都是整数，所以r是d的倍数，d是r的因数\\
所以：只要是a,b的因数，就一定是d,r的约数\\
}
$$$$
\displaylines{
(2)设(b,r)=d\\
和之前一样，那么b=dx,r=dy\\
然后将其代入a=bq+r\\
得a=d(xq+y)\\
因为x,q,y都是整数，所以a是d的倍数，d是a的因数\\
所以：只要是d,r的因数，就一定是a的因数\\
}
$$&lt;p&gt;这样，我们就得出(a,b)的因数和(b,r)的因数相同，它们的因数都相同，那么它们的最大公因数也就相同。&lt;/p&gt;
&lt;p&gt;所以我们要求(a,b)的最大公因数，我们就通过可以求(b,r)的最大公因数来得到。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;现在我们再来看看开头的题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;题目：求最大公因数(36,14)&lt;/p&gt;
&lt;p&gt;反复用(a,b)=(b,r)的方法&lt;/p&gt;
&lt;p&gt;(36,14)=(14,8)=(8,6)=(6,2)&lt;/p&gt;
&lt;p&gt;最后得到(6,2)，显而易见最大公约数是2&lt;/p&gt;
&lt;h2 id=&#34;写gcd函数&#34;&gt;写gcd函数
&lt;/h2&gt;&lt;p&gt;接下来看看我们如何在C++中用辗转相除法写gcd函数&lt;/p&gt;
&lt;p&gt;gcd函数就是用来求最大公因数的函数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;gcd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//a能被b整除时就终止循环
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//讲a换成除数b，b换成余数r
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然也可以直接用algorithm头文件中的gcd函数，&lt;/p&gt;
&lt;p&gt;我们学会自己写是为了理解原理，提升思维，&lt;/p&gt;
&lt;p&gt;自己写还可以在有特殊需求的时候更自定义化。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
